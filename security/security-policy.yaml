# Container Security Policy for RandevuBu
# This file defines security constraints and policies for container runtime

apiVersion: v1
kind: SecurityPolicy
metadata:
  name: randevubu-security-policy
  description: "Production security policy for RandevuBu containers"

# Container Security Context
securityContext:
  # Run as non-root user
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true

  # Filesystem security
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

  # Capabilities (drop all, add only necessary ones)
  capabilities:
    drop:
      - ALL
    add: []

# Resource Limits
resources:
  limits:
    cpu: "1000m"      # 1 CPU core max
    memory: "512Mi"    # 512MB RAM max
    ephemeral-storage: "1Gi"
  requests:
    cpu: "500m"       # 0.5 CPU core minimum
    memory: "256Mi"   # 256MB RAM minimum
    ephemeral-storage: "512Mi"

# Network Policies
networkPolicy:
  # Ingress rules
  ingress:
    - from: []  # Allow from any source (will be restricted by nginx)
      ports:
        - protocol: TCP
          port: 3000

  # Egress rules
  egress:
    # Allow database connections
    - to:
        - podSelector:
            matchLabels:
              app: postgres
      ports:
        - protocol: TCP
          port: 5432

    # Allow Redis connections
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379

    # Allow external HTTPS (for payment APIs, SMS, etc.)
    - to: []
      ports:
        - protocol: TCP
          port: 443

    # Allow DNS
    - to: []
      ports:
        - protocol: UDP
          port: 53

# Volume Mounts (read-only where possible)
volumes:
  - name: logs
    mountPath: /var/log/randevubu
    readOnly: false

  - name: tmp
    mountPath: /tmp
    readOnly: false

  - name: npm-cache
    mountPath: /tmp/.npm
    readOnly: false

# Environment Variable Security
environmentVariables:
  # Allowed environment variables (whitelist)
  allowed:
    - NODE_ENV
    - PORT
    - API_VERSION
    - LOG_LEVEL
    - DATABASE_URL
    - REDIS_URL
    - JWT_ACCESS_SECRET
    - JWT_REFRESH_SECRET
    - COOKIE_SECRET
    - SESSION_SECRET
    - CORS_ORIGINS
    - RATE_LIMIT_WINDOW_MS
    - RATE_LIMIT_MAX
    - BCRYPT_ROUNDS
    - SMS_API_KEY
    - SMS_API_URL
    - SMTP_HOST
    - SMTP_PORT
    - SMTP_USER
    - SMTP_PASS
    - IYZICO_API_KEY
    - IYZICO_SECRET_KEY
    - IYZICO_BASE_URL
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_REGION
    - AWS_S3_BUCKET_NAME
    - DEFAULT_TIMEZONE
    - DEFAULT_LANGUAGE
    - DEFAULT_CURRENCY
    - DEFAULT_PAGE_SIZE
    - MAX_PAGE_SIZE
    - MAX_FILE_SIZE
    - UPLOAD_PATH

  # Prohibited patterns
  prohibited:
    - "*PASSWORD*"
    - "*SECRET*"
    - "*TOKEN*"
    - "*KEY*"

# Runtime Security Rules
runtime:
  # Process restrictions
  processes:
    maxProcesses: 10
    allowedCommands:
      - node
      - dumb-init

  # File system restrictions
  filesystem:
    readOnlyPaths:
      - /etc
      - /usr
      - /bin
      - /sbin
      - /lib
      - /opt

    writablePaths:
      - /var/log/randevubu
      - /tmp
      - /app/node_modules/.cache  # For npm cache

  # Network restrictions
  network:
    allowedOutboundHosts:
      - "*.amazonaws.com"        # AWS services
      - "*.iyzipay.com"         # Payment processing
      - "api.iyzipay.com"       # Payment processing
      - "sandbox-api.iyzipay.com" # Payment testing

    blockedPorts:
      - 22   # SSH
      - 23   # Telnet
      - 135  # RPC
      - 445  # SMB

# Monitoring and Compliance
monitoring:
  # Security events to monitor
  events:
    - privilege_escalation
    - root_access_attempt
    - unauthorized_file_access
    - suspicious_network_activity
    - environment_variable_access

  # Compliance requirements
  compliance:
    standards:
      - "CIS Docker Benchmark"
      - "NIST Cybersecurity Framework"
      - "GDPR Data Protection"

    auditLogs:
      enabled: true
      retention: "90 days"
      location: "/var/log/audit"

# Container Scanning Requirements
scanning:
  # Vulnerability scanning
  vulnerabilities:
    enabled: true
    severity: "HIGH"
    failOnCritical: true
    scanFrequency: "daily"

  # Secret scanning
  secrets:
    enabled: true
    patterns:
      - "api_key"
      - "password"
      - "secret"
      - "token"
      - "private_key"

  # Configuration scanning
  configurations:
    enabled: true
    frameworks:
      - "Docker CIS"
      - "Kubernetes"
      - "OWASP"

# Emergency Response
incident:
  # Automatic responses
  automated:
    - action: "isolate"
      trigger: "critical_vulnerability_detected"
    - action: "alert"
      trigger: "suspicious_activity"
    - action: "restart"
      trigger: "memory_limit_exceeded"

  # Contact information
  contacts:
    security: "security-team@randevubu.com"
    operations: "ops-team@randevubu.com"
    emergency: "emergency@randevubu.com"