# ðŸš€ DEVELOPMENT DOCKER COMPOSE
# Optimized for development with hot reload, debugging, and easy setup

services:
  # Application service (Development)
  app:
    build:
      context: .
      target: development
    container_name: randevubu-dev
    ports:
      - "3001:3001"      # App port for direct access
      - "5555:5555"      # Prisma Studio
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/randevubu?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env
    volumes:
      - .:/app                    # Hot reload
      - /app/node_modules         # Exclude node_modules
      - /app/dist                 # Exclude dist
    command: sh -c "npx prisma generate && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - randevubu-dev-network
    restart: unless-stopped

  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    container_name: randevubu-postgres-dev
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=randevubu
    ports:
      - "5432:5432"      # Expose for direct access
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - randevubu-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache (Development)
  redis:
    image: redis:7-alpine
    container_name: randevubu-redis-dev
    ports:
      - "6379:6379"      # Expose for direct access
    volumes:
      - redis_dev_data:/data
    networks:
      - randevubu-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx (Development - Simple proxy)
  nginx:
    image: nginx:alpine
    container_name: randevubu-nginx-dev
    ports:
      - "80:80"          # HTTP only for dev
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - randevubu-dev-network
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  randevubu-dev-network:
    driver: bridge


