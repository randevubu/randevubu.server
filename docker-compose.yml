services:
  # Application service
  app:
    build:
      context: .
      target: development
    container_name: randevubu-server
    ports:
      - "3001:3001"
      - "5555:5555"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/randevubu?schema=public
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    command: sh -c "npx prisma generate && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - randevubu-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: randevubu-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=randevubu
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d/migrations:ro
    networks:
      - randevubu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  randevubu-network:
    driver: bridge